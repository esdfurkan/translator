[strings]
PROMPT_API_KEY = Please enter your API Key and press Enter:
ERROR_API_KEY_EMPTY = API Key not provided. Exiting program.
HEADER_MODEL_SELECTION = --- Model Selection ---
PROMPT_SELECT_MODEL = Please select a model ({min}-{max}):
ERROR_INVALID_CHOICE = Invalid choice. Please enter a number from the list.
ERROR_VALUE_ERROR = Please enter only a number.
HEADER_FOLDER_SELECTION = --- Folder Selection ---
ERROR_NO_SUBFOLDERS = ERROR: No subfolders found in this directory to process.
PROMPT_SELECT_FOLDER = Please select a folder ({min}-{max}):
HEADER_COST_CONFIRM = --- Cost Calculation and Confirmation ---
INFO_FOLDER_SELECTED = Selected Folder: '{folder}' ({count} image(s) found)
INFO_MODEL_SELECTED = Selected Model: {model_name}
INFO_VARIABLE_COST = The cost for this model varies depending on the image.
INFO_BASE_COST_ESTIMATE = ESTIMATED BASE COST: {count} image(s) x {base_cost} = {total_cost}+ credits
INFO_TOTAL_COST = TOTAL COST: {count} image(s) x {cost_per_image} = {total_cost} credits
PROMPT_CONFIRM_ACTION = Do you approve this operation? (Y/N):
INFO_ACTION_CANCELLED = Operation cancelled.
HEADER_TRANSLATION_START = --- Starting Translation Process ---
INFO_PROCESSING = [{i}/{total}] Processing: {filename}
ERROR_FILE_SIZE_EXCEEDED = -> ERROR: File size limit exceeded ({size_mb:.2f} MB). Moving to error folder.
INFO_SUCCESS = -> SUCCESS!
ERROR_API = -> API ERROR: {error_msg}. Moving to error folder.
ERROR_GENERAL = -> GENERAL ERROR: {error}. Moving to error folder.
HEADER_TRANSLATION_DONE = --- Translation Process Complete! ---
HEADER_COMPRESSION = --- Compression ---
WARN_SCRIPT_NOT_FOUND = WARNING: 'compress.sh' script not found or not executable.
INFO_COMPRESSION_SKIPPED = Skipping compression step. (To grant permission: chmod +x compress.sh)
PROMPT_CONFIRM_COMPRESSION = Do you want to compress the folder '{folder}' as a .zip file? (Y/N):
INFO_CREATING_ZIP = Creating '{zip_filename}'. This may take some time...
INFO_COMPRESSION_SUCCESS = Compression successfully completed: {zip_filename}
ERROR_COMPRESSION_FAILED = ERROR: An issue occurred during compression. (Exit Code: {return_code})
ERROR_SCRIPT_NOT_FOUND_BASH = ERROR: 'bash' or 'compress.sh' not found.
ERROR_COMPRESSION_UNEXPECTED = An unexpected error occurred during compression: {error}
INFO_COMPRESSION_STEP_SKIPPED = Compression step skipped.
INFO_ALL_DONE = All operations are finished. Exiting program.
PROMPT_SELECT_LANGUAGE = Please select a language / Lütfen bir dil seçin:
INFO_CREDITS = (Credits: {cost})
HEADER_PREPROCESS = --- Image Pre-processing and Compression ---
INFO_NO_IMAGES_TO_PROCESS = No images found to process.
INFO_CHECKING_IMAGE_SIZES = Checking image sizes in '{folder}' folder...
INFO_COMPRESSING_IMAGE = -> Compressing: {filename} ({size_mb:.2f} MB)...
INFO_COMPRESSION_DONE =  Done. New size: {final_size_mb:.2f} MB
ERROR_COMPRESSION_GENERAL = -> An error occurred during compression: {error}
HEADER_NEXTCLOUD_UPLOAD = --- Nextcloud Upload ---
PROMPT_CONFIRM_UPLOAD_FOLDER = Do you want to upload the folder '{path}' to Nextcloud? (Y/N):
PROMPT_CONFIRM_UPLOAD_ZIP = Do you want to upload the .zip file '{path}' to Nextcloud? (Y/N):
INFO_UPLOADING_TO_NEXTCLOUD = Uploading to Nextcloud, please wait...
INFO_UPLOAD_SUCCESS = Upload successful!
INFO_SHARE_LINK = Share Link: {link}
ERROR_NEXTCLOUD_CONFIG_MISSING = WARNING: 'nextcloud.env' file not found. Skipping upload step.
ERROR_NEXTCLOUD_LOGIN = ERROR: Could not connect to Nextcloud. Please check your credentials.
ERROR_NEXTCLOUD_UPLOAD = ERROR: An issue occurred during upload: {error}
NEXTCLOUD_REMOTE_FOLDER_NAME = Translated
INFO_UPLOAD_SUCCESS_NO_LINK = Upload successful, but an automatic link cannot be created with this fallback library.
ERROR_NO_NEXTCLOUD_LIBRARY = ERROR: Neither of the required Nextcloud libraries could be found. Skipping upload step.
HEADER_WEBHOOK = --- Sending Notification ---
INFO_WEBHOOK_SUCCESS = Notification sent successfully to: {service}
INFO_WEBHOOK_FAILED = Failed to send notification to: {service}, Error: {error}
WEBHOOK_MESSAGE_SUCCESS = ✅ **Translation Completed Successfully!**\n\n**Folder:** `{folder_name}`\n**Share Link:** {link}
WEBHOOK_MESSAGE_FAILURE = ❌ **An Error Occurred During Translation!**\n\n**Folder:** `{folder_name}`\nPlease check the server logs.
PROMPT_SAVE_API_KEY = Do you want to save this API key for future use? (Y/N):
INFO_API_KEY_SAVED = API key saved to api.env.
INFO_API_KEY_FOUND = Saved API key found and will be used.
PROMPT_TARGET_LANGUAGE = Enter the target language for the translation (e.g., en, es, ja):
HEADER_MAIN_MENU = --- Translation Automation System ---
PROMPT_SELECT_MODE_CLI = [1] Perform Step-by-Step Translation (For one-time jobs)
PROMPT_SELECT_MODE_BOT = [2] Start Automatic Bot (Listens for links from chat)
PROMPT_EXIT = Press [Q] to exit.
PROMPT_CHOICE = Your choice:
ERROR_BOT_CONFIG_MISSING = Bot configuration is missing or incomplete in bot.env.
